name: Deploy static website to Raspberry Pi Kubernetes

on:
  push:
    branches: main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps: 
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-actions@v3
      
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with: 
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      
      - name: Build and push Docker image
        run: |
          # Get the latest commit hash
          COMMIT_HASH=$(git rev-parse --short HEAD)

          docker buildx build --platform linux/arm64 -t ${{ secrets.DOCKERHUB_USERNAME }}/my-nginx-site:latest -t ${{ secrets.DOCKERHUB_USERNAME }}/my-nginx-site:${COMMIT_HASH} . --push

      - name: Set up SSH private key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
      
      - name: Set up SSH tunnel
        run: |
          ssh -o StrictHostKeyChecking=no -L ${{ secrets.ROUTER_PORT }}:${{ secrets.PI_IP }}:${{ secrets.PI_PORT }} ${{ secrets.PI_USERNAME }}@${{ secrets.ROUTER_IP }} -p ${{
            secrets.ROUTER_PORT }} -N &
          sleep 5
      
      - name: Test SSH Connection
        run: |
          echo "Testing SSH connection to the local machine through the tunnel..."
          ssh -o StrictHostKeyChecking=no -p ${{ secrets.ROUTER_PORT }} ${{ secrets.PI_USERNAME }}@${{ secrets.ROUTER_IP }} "echo Connection Successful"
      
      - name: Create directories on Raspberry Pi 5
        run: |
          ssh -o StrictHostKeyChecking=no -p ${{ secrets.ROUTER_PORT }} ${{ secrets.PI_USERNAME }}@${{ secrets.ROUTER_IP }} << 'EOF'
            mkdir -p kube-project
          EOF
      
      - name: Copy Kubernetes files to Raspberry Pi 5
        run: | 
          scp -P ${{ secrets.ROUTER_PORT }} ./kubernetes/nginx/* ${{ secrets.PI_USERNAME }}@${{ secrets.ROUTER_IP }}:/home/${{ secrets.PI_USERNAME }}/kube-project/
          scp -P ${{ secrets.ROUTER_PORT }} ./kubernetes/monitoring/* ${{ secrets.PI_USERNAME }}@${{ secrets.ROUTER_IP }}:/home/${{ secrets.PI_USERNAME }}/kube-project/ 

      - name: Install Prometheus and Grafana stack
        run: |
          ssh -o StrictHostKeyChecking=no -p ${{ secrets.ROUTER_PORT }} ${{ secrets.PI_USERNAME }}@${{ secrets.ROUTER_IP }} << 'EOF'
            helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
            helm repo update
            helm upgrade --install prometheus prometheus-community/kube-prometheus-stack -f /home/${{ secrets.PI_USERNAME }}/kube-project/values.yaml
            kubectl apply -f -f /home/${{ secrets.PI_USERNAME }}/kube-project/nginx-deployment.yaml
            kubectl apply -f -f /home/${{ secrets.PI_USERNAME }}/kube-project/nginx-exporter-deployment.yaml
          EOF